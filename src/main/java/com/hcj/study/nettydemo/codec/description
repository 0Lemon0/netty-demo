在网络通信数据传输中通常会用到对象的编解码技术,而Java虽然有提供序列化功能,但缺点太多,所以网络通信开发中通常不会选用Java序列化作为编解码框架而会选用其他业界主流编解码技术和框架
Java序列化缺点:
1.无法跨语言,通信双方进程需都为JAVA开发
2.序列化后的码流太大,占用过多的存储空间及网络带宽,降低了系统的吞吐
3.序列化性能太低,处理时间相对太长

Google的Protobuf框架:
1.编解码性能高效
2.无关语言,无关平台,扩展性好
3.支持Java、C++、Python三种语言

Facebook的Thrift:适用于搭建大型数据交换及存储的通用工具
1.支持二进制压缩编解码,性能高效
2.跨平台,跨语言,支持C++、C#、Erlang、Java、PHP、Python等语言

JBoss的Marshalling(使用场景较局限):Java序列化的替代
1.修正了JDK自带的序列化包的很多问题且兼容Serializable接口
2.在Java序列化基础上做了扩展,可做自定义参数配置
3.对比Java序列化减小了序列化后的字节数组长度,通过缓存技术提升了编解码性能,且使用也更方便